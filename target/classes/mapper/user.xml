<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.shop.repository.UserRepository">

	<!-- ADMIN -->
	<select id="userCheck" resultType="Integer">
		SELECT COUNT(*) FROM user WHERE delDt NOT BETWEEN DATE_ADD(now(), INTERVAL -7 DAY) and now()
	</select>
	
	<select id="findAll" resultType="com.example.shop.model.User">
		SELECT email, addr, phone, authFg, insDt 
		FROM user
		WHERE delDt is null AND roleCd not in('99')
		ORDER BY id desc
	</select>
	
    <delete id="userDelete">
    	DELETE FROM user WHERE delDt NOT BETWEEN DATE_ADD(now(), INTERVAL -7 DAY) and now()
    </delete>
	
	<!-- USER -->
	<select id="findByEmailCheck" resultType="Integer">
		SELECT COUNT(*) FROM user WHERE email = #{email}
	</select>
	
	<select id="findByEmail" resultType="com.example.shop.model.User">
		SELECT u.*, c.codeNm as 'roleNm'
		FROM user u
		INNER JOIN code c ON u.roleCd = c.code AND c.codeGbn = 'ROLE'
		WHERE email = #{email} AND delDt is null AND authFg='Y'
	</select>

	<select id="findByEmailAuth" resultType="com.example.shop.model.User">
		SELECT u.*, c.codeNm as 'roleNm'
		FROM user u
		INNER JOIN code c ON u.roleCd = c.code AND c.codeGbn = 'ROLE'
		WHERE email = #{email} AND delDt is null
	</select>

	<insert id="save">
		INSERT INTO user VALUES(null, #{email}, #{password}, #{addr}, #{phone}, '01', 'N', #{authCode}, now(), null, null)
	</insert>
	
	<update id="updateAuth">
  		UPDATE user SET authFg='Y' WHERE email=#{email}
    </update>
    
    <update id="update">
  		UPDATE user SET password=#{password}, addr=#{addr}, phone=#{phone} WHERE id=#{id}
    </update>
    
    <update id="dropout">
    	UPDATE user SET delDt=now() WHERE id=#{id}
    </update>
    
</mapper>